
name: AutoBuild - deved

on:
  push:
    branches: [ dev, cmake ]

jobs:
  windows-x64:
    runs-on: windows-latest
    
    # Don't build for commits with "[nobuild]"
    if: "! contains(github.event.head_commit.message, '[nobuild]')"

    steps:
      - uses: actions/checkout@v2
        
      - name: Install Conan
        run: pip install conan
        shell: bash

      - name: Change Conan home
        run: echo "CONAN_USER_HOME=D:/a/FallingSandSurvival/" >> $GITHUB_ENV
        shell: bash

#      - name: Cache for .conan
#        id: cache-conan
#        uses: actions/cache@v2.1.2
#        env:
#          cache-name: cache-conan-modules
#        with:
#          path: "D:/a/FallingSandSurvival/.conan/"
#          key: ${{ runner.os }}-builder-${{ env.cache-name }}-${{ hashFiles('./FallingSandSurvival/conanfile.txt') }}-aa
#          restore-keys: ${{ runner.os }}-builder-${{ env.cache-name }}-

      - name: Run setup.sh
        run: yes n | ./setup.sh || if [[ $? -eq 141 ]]; then true; else exit $?; fi
        shell: bash

      - name: Run Conan install
        run: conan install ./FallingSandSurvival/conanfile.txt -g visual_studio --install-folder ./x64/Release/.conan -s arch=x86_64 -s build_type=Release -s compiler.runtime=MD  --build=missing --update
        shell: bash
        
      - name: Build Binary
        run: |
          bash -c "'C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe' -p:Configuration=Release;Platform=x64"
          mkdir Build
          cp ./x64/Release/FallingSandSurvival.exe ./Build/FallingSandSurvival.exe
          cp ./FallingSandSurvival/lib/bin/x64/fmodL.dll ./Build/fmodL.dll
          cp ./FallingSandSurvival/lib/bin/x64/fmodstudioL.dll ./Build/fmodstudioL.dll
          cp -r ./FallingSandSurvival/assets ./Build/assets
          cp -r ./FallingSandSurvival/data ./Build/data
          cp -r ./FallingSandSurvival/gamedir ./Build/gamedir
        shell: bash
        
      - name: Compress FallingSandSurvival.exe with UPX
        uses: svenstaro/upx-action@2.0.1
        with:
          file: ./Build/FallingSandSurvival.exe
      
      - name: Compress fmodL.dll with UPX
        uses: svenstaro/upx-action@2.0.1
        with:
          file: ./Build/fmodL.dll
      
      - name: Compress fmodstudioL.dll with UPX
        uses: svenstaro/upx-action@2.0.1
        with:
          file: ./Build/fmodstudioL.dll
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.0
        with:
          name: FallingSandSurvival_win_x64
          path: ./Build
        
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@latest
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          body: |
#            Automated Release by GitHub Action CI
#          draft: true
#          prerelease: true      
#          
#      - name: Upload Release Asset (x64)
#        id: upload-release-asset-x64
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./FallingSandSurvival_win_x64.ZIP
#          asset_name: FallingSandSurvival_win_x64.ZIP
#          asset_content_type: application/zip
#
  linux-x64:
    runs-on: ubuntu-latest
    
    # Don't build for commits with "[nobuild]"
    if: "! contains(github.event.head_commit.message, '[nobuild]')"

    steps:
      - uses: actions/checkout@v2
        
      - name: Install Conan
        run: |
          sudo apt-get install python3-setuptools
          sudo pip3 install wheel
          sudo pip3 install conan
        shell: bash

#      - name: Cache for .conan
#        id: cache-conan
#        uses: actions/cache@v2.1.2
#        env:
#          cache-name: cache-conan-modules
#        with:
#          path: "D:/a/FallingSandSurvival/.conan/"
#          key: ${{ runner.os }}-builder-${{ env.cache-name }}-${{ hashFiles('./FallingSandSurvival/conanfile.txt') }}-aa
#          restore-keys: ${{ runner.os }}-builder-${{ env.cache-name }}-

      - name: Run setup.sh
        run: bash -c "yes n || true" | sh ./setup.sh
        shell: bash

      - name: Install System Libs
        run: sudo apt-fast install -y libgl-dev xorg-dev libx11-xcb-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libjack-jackd2-0 libjack-jackd2-dev
        shell: bash
        
      - name: Generate Build Files
        run: |
          mkdir build
          cd build
          echo $PWD
          mkdir lib
          cmake ..
        shell: bash
        
      - name: Build Binary
        run: |
          cd build
          echo $PWD
          echo "$(nproc) cores available"
          cmake --build . --config Release -- -j $(nproc)
        shell: bash
        
      - name: Package Build
        run: |
          cd build/FallingSandSurvival
          echo $PWD
          mkdir Build
          mkdir Build/lib
          cp ../../FallingSandSurvival/lib/FMOD/lib/x64/libfmod.so.11 Build/lib/
          cp ../../FallingSandSurvival/lib/FMOD_studio/lib/x64/libfmodstudio.so.11 Build/lib/
          cp -r ../../FallingSandSurvival/assets/ Build/assets/
          cp -r ../../FallingSandSurvival/data/ Build/data/
          cp -r ../../FallingSandSurvival/gamedir/ Build/gamedir/
          cp ./FallingSandSurvival Build/FallingSandSurvival
          chmod +x Build/FallingSandSurvival
          objdump -p Build/FallingSandSurvival | egrep 'RPATH|RUNPATH'
        shell: bash
        
      - name: Compress binary with UPX
        uses: svenstaro/upx-action@2.0.1
        with:
          file: build/FallingSandSurvival/Build/FallingSandSurvival
          
      - name: Compress libfmod.so.11 with UPX
        uses: svenstaro/upx-action@2.0.1
        with:
          file: build/FallingSandSurvival/Build/lib/libfmod.so.11
          
      - name: Compress libfmodstudio.so.11 with UPX
        uses: svenstaro/upx-action@2.0.1
        with:
          file: build/FallingSandSurvival/Build/lib/libfmodstudio.so.11
          
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.0
        with:
          name: FallingSandSurvival_linux_x64
          path: build/FallingSandSurvival/Build
          
      - name: Test
        run: |
          ls -R .
          
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated Release by GitHub Action CI
          draft: true
          prerelease: true      
          
      - name: Upload Release Asset (x64)
        id: upload-release-asset-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./FallingSandSurvival_linux_x64.ZIP
          asset_name: FallingSandSurvival_linux_x64.ZIP
          asset_content_type: application/zip
